<!doctype html>
<html>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css"
    />
    <!-- 결제위젯 SDK 추가 -->
    <script src="https://js.tosspayments.com/v1/payment-widget"></script>
    <title>Document</title>
  </head>
  <body>
    <h4 class="container mt-4"><strong>글 작성페이지</strong></h4>
    <div>dfdfsdf ds</div>
    <!-- 결제 UI, 이용약관 UI 영역 -->
    <div id="payment-method"></div>
    <div id="agreement"></div>
    <!-- 할인 쿠폰 -->
    <div>
      <input type="checkbox" id="coupon-box" />
      <label for="coupon-box"> 5,000원 쿠폰 적용 </label>
    </div>
    <!-- 결제하기 버튼 -->
    <button id="payment-button">결제하기</button>
  </body>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <script
    src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
    integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
    crossorigin="anonymous"
  ></script>
  <script
    src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"
    integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6"
    crossorigin="anonymous"
  ></script>

  <script>
    const generateRandomString = (length) => {
      const characters =
        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
      let randomString = '';

      for (let i = 0; i < length; i++) {
        const randomIndex = Math.floor(Math.random() * characters.length);
        randomString += characters.charAt(randomIndex);
      }

      return randomString;
    };
    (async () => {
      //클라이언트키 셋팅
      const clientKey = 'test_gck_XZYkKL4Mrj1DP219mWpLV0zJwlEW';
      const customerKey = '12345678'; // 샘플로 12345678로 만들었습니다. 실제로는 유저 테이블에서 꺼낼수 있는 유니크한 값으로 넣어주셔야 합니다.
      const coupon = document.getElementById('coupon-box');
      const button = document.getElementById('payment-button');
      // ------  결제위젯 초기화 ------
      // 비회원 결제에는 customerKey 대신 ANONYMOUS를 사용하세요.
      const paymentWidget = PaymentWidget(clientKey, customerKey); // 회원 결제
      // const paymentWidget = PaymentWidget(clientKey, PaymentWidget.ANONYMOUS) // 비회원 결제
      // ------  결제 UI 렌더링 ------
      // 결제 UI를 렌더링할 위치를 지정합니다. `#payment-method`와 같은 CSS 선택자와 결제 금액 객체를 추가하세요.
      // DOM이 생성된 이후에 렌더링 메서드를 호출하세요.
      // https://docs.tosspayments.com/reference/widget-sdk#renderpaymentmethods선택자-결제-금액-옵션
      const paymentMethodWidget = paymentWidget.renderPaymentMethods(
        '#payment-method',
        { value: 50000 },
        // 렌더링하고 싶은 결제 UI의 variantKey
        // 결제 수단 및 스타일이 다른 멀티 UI를 직접 만들고 싶다면 계약이 필요해요.
        // https://docs.tosspayments.com/guides/payment-widget/admin#멀티-결제-ui
        { variantKey: 'DEFAULT' },
      );
      // ------  이용약관 UI 렌더링 ------
      // 이용약관 UI를 렌더링할 위치를 지정합니다. `#agreement`와 같은 CSS 선택자를 추가하세요.
      // https://docs.tosspayments.com/reference/widget-sdk#renderagreement선택자-옵션
      paymentWidget.renderAgreement(
        '#agreement',
        { variantKey: 'AGREEMENT' }, // 기본 이용약관 UI 렌더링
      );
      // ------ 금액 업데이트 ------
      // 새로운 결제 금액을 넣어주세요.
      // https://docs.tosspayments.com/reference/widget-sdk#updateamount결제-금액
      coupon.addEventListener('change', function () {
        if (coupon.checked) {
          paymentMethodWidget.updateAmount(amount - 5000);
        } else {
          paymentMethodWidget.updateAmount(amount);
        }
      });
      // ------ '결제하기' 버튼 누르면 결제창 띄우기 ------
      // 더 많은 결제 정보 파라미터는 결제위젯 SDK에서 확인하세요.
      // https://docs.tosspayments.com/reference/widget-sdk#requestpayment결제-정보
      button.addEventListener('click', function () {
        paymentWidget.requestPayment({
          //주문 id입니다. 중복되지 않는 고유한 값으로 입력하시기 바랍니다.
          orderId: `${new Date().getTime()}`,
          orderName: '토스 티셔츠 외 2건', //주문상품
          successUrl: 'http://localhost:3003/test/toss_normal_callback', //성공시 url
          failUrl: 'http://localhost:3003/common/fail', //실패시 url
          customerEmail: 'customer123@gmail.com', //유저 테이블에서 꺼내온 이메일
          customerName: '김토스', //유저 테이블에서 꺼내온 이름
          customerMobilePhone: '01012341234', //유저 테이블에서 꺼내온 폰번호
        });
      });
    })();
  </script>
</html>
